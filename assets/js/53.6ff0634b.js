(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{378:function(_,s,v){"use strict";v.r(s);var t=v(18),a=Object(t.a)({},(function(){var _=this,s=_._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("h1",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[_._v("#")]),_._v(" 索引")]),_._v(" "),s("h2",{attrs:{id:"什么情况下需要创建索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下需要创建索引"}},[_._v("#")]),_._v(" 什么情况下需要创建索引？")]),_._v(" "),s("ul",[s("li",[_._v("字段的数值有唯一性限制：比如用户名\n"),s("ul",[s("li",[_._v("索引本身可以起到约束的作用，比如唯一索引、主键索引都是可以起到唯一性约束的，因此在数据表中，如果某个字段是唯一性的，就可以直接创建唯一性索引，或者主键索引。")])])]),_._v(" "),s("li",[_._v("频繁作为 "),s("code",[_._v("WHERE")]),_._v(" 查询条件的字段，尤其在数据表大的情况下\n"),s("ul",[s("li",[_._v("在数据量大的情况下，某个字段在 SQL 查询的 WHERE 条件中经常被使用到，那么就需要给这个字段创建索引了。创建普通索引就可以大幅提升数据查询的效率。")])])]),_._v(" "),s("li",[_._v("需要经常 "),s("code",[_._v("GROUP BY")]),_._v(" 和 "),s("code",[_._v("ORDER BY")]),_._v(" 的列\n"),s("ul",[s("li",[s("strong",[_._v("索引就是让数据按照某种顺序进行存储或检索")]),_._v("，因此当使用 "),s("code",[_._v("GROUP BY")]),_._v(" 对数据进行分组查询，或者使用 "),s("code",[_._v("ORDER BY")]),_._v(" 对数据进行排序的时候，就需要对分组或者排序的字段进行索引。")]),_._v(" "),s("li",[_._v("实际上多个单列索引在多条件查询时只会生效一个索引（MySQL 会选择其中一个限制最严格的作为索引），所以在"),s("strong",[_._v("多条件联合查询的时候最好创建联合索引")]),_._v("。")])])]),_._v(" "),s("li",[s("code",[_._v("UPDATE")]),_._v("、"),s("code",[_._v("DELETE")]),_._v(" 的 "),s("code",[_._v("WHERE")]),_._v(" 条件列，一般也需要创建索引\n"),s("ul",[s("li",[_._v("原理是需要先根据 "),s("code",[_._v("WHERE")]),_._v(" 条件列检索出来这条记录，然后再对它进行更新或删除。")]),_._v(" "),s("li",[_._v("如果进行更新的时候，更新的字段是非索引字段，提升的效率会更明显，这是因为"),s("strong",[_._v("非索引字段更新不需要对索引进行维护")]),_._v("。")])])]),_._v(" "),s("li",[s("code",[_._v("DISTINCT")]),_._v(" 字段需要创建索引")]),_._v(" "),s("li",[_._v("多表 "),s("code",[_._v("JOIN")]),_._v(" 连接操作时：\n"),s("ul",[s("li",[_._v("连接表的数量尽量不要超过 3 张，因为每增加一张表就相当于增加了一次嵌套的循环，数量级增长会非常快，严重影响查询的效率")]),_._v(" "),s("li",[_._v("对 "),s("code",[_._v("WHERE")]),_._v(" 条件创建索引，因为 "),s("code",[_._v("WHERE")]),_._v(" 才是对数据条件的过滤。如果在数据量非常大的情况下，没有 "),s("code",[_._v("WHERE")]),_._v(" 条件过滤是非常可怕的。")]),_._v(" "),s("li",[_._v("对用于连接的字段创建索引，并且该字段在多张表中的类型必须一致")])])])]),_._v(" "),s("h2",{attrs:{id:"什么情况下不需要创建索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下不需要创建索引"}},[_._v("#")]),_._v(" 什么情况下不需要创建索引？")]),_._v(" "),s("ul",[s("li",[_._v("表记录太少，比如少于 1000 个")]),_._v(" "),s("li",[s("code",[_._v("WHERE")]),_._v(" 条件（包括 "),s("code",[_._v("GROUP BY")]),_._v("、"),s("code",[_._v("ORDER BY")]),_._v("）里用不到的字段不需要创建索引，索引的价值是快速定位，如果起不到定位的字段通常是不需要创建索引的。")]),_._v(" "),s("li",[s("strong",[_._v("大量重复数据")]),_._v("的字段不用创建索引，比如性别字段\n"),s("ul",[s("li",[_._v("特例：重复值高的字段一般不创建索引，重复率高于10%可以考虑不创建索引，具体情况也要具体分析，通常都不应该给性别字段创建索引，因为重复度高，但是如果数据集是女人国，男性比例只有0.01%，在想要查询哪些为男性的情况时使用索引进行查询效率会更高。这种情况也适用于某种疾病（发病率很低）正样本的查询，是否患有某个罕见病的数值为0或者1，且疾病的发病率（数值=1的情况）往往很低，如果想要查询哪些人患了这种疾病，那么将这个字段创建索引后查询的效率会更高，因为想要查找的这个人群区分度还是很高的。")])])]),_._v(" "),s("li",[s("strong",[_._v("频繁更新的字段")]),_._v("不一定要创建索引。因为更新数据的时候也需要更新索引，如果索引太多，在更新索引的时候也会造成负担，从而影响效率。")])]),_._v(" "),s("h2",{attrs:{id:"什么情况下索引失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下索引失效"}},[_._v("#")]),_._v(" 什么情况下索引失效？")]),_._v(" "),s("ul",[s("li",[_._v("如果对索引进行了"),s("strong",[_._v("表达式计算")]),_._v("，索引会失效。这是因为需要把索引字段的取值都取出来，然后依次进行表达式的计算来进行条件判断，因此采用的就是全表扫描的方式")]),_._v(" "),s("li",[_._v("如果对索引使用"),s("strong",[_._v("函数")]),_._v("，索引也会失效。")]),_._v(" "),s("li",[_._v("在 "),s("code",[_._v("WHERE")]),_._v(" 子句中，如果在 "),s("code",[_._v("OR")]),_._v(" 前的条件列进行了索引，而在 "),s("code",[_._v("OR")]),_._v(" 后的条件列没有进行索引，那么索引会失效。\n"),s("ul",[s("li",[_._v("因为 "),s("code",[_._v("OR")]),_._v(" 的含义是两个只要满足一个即可，因此只有一个条件列进行了索引是没有意义的，只要有条件列没有进行索引，就会进行全表扫描，因此索引的条件列也会失效。")])])]),_._v(" "),s("li",[_._v("使用 "),s("code",[_._v("LIKE")]),_._v(" 进行模糊查询的时候，前面不能是 "),s("code",[_._v("%")])]),_._v(" "),s("li",[_._v("索引列尽量设置为 "),s("code",[_._v("NOT NULL")]),_._v(" 约束\n"),s("ul",[s("li",[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.4/en/data-size.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("MySQL 官方文档"),s("OutboundLink")],1),_._v("建议尽量将数据表的字段设置为 "),s("code",[_._v("NOT NULL")]),_._v(" 约束，这样做的好处是可以更好地使用索引，节省空间，甚至加速 SQL 的运行")]),_._v(" "),s("li",[_._v("判断索引列是否为 "),s("code",[_._v("NOT NULL")]),_._v(" 往往需要走全表扫描，因此最好在设计数据表的时候就将字段设置为 "),s("code",[_._v("NOT NULL")]),_._v(" 约束。比如可以将 "),s("code",[_._v("INT")]),_._v(" 类型字段的默认值设置为 '0'，将字符类型的默认值设置为空字符串 ''。")])])]),_._v(" "),s("li",[_._v("使用时要注意"),s("strong",[_._v("联合索引的最左原则")]),_._v(" "),s("ul",[s("li",[_._v("最左原则也就是需要从左到右的使用索引中的字段，一条 SQL 语句可以只使用联合索引的一部分，但是需要从最左侧开始，否则就会失效。（"),s("strong",[_._v("语句中只用到联合索引的一部分时，需要考虑最左匹配原则；如果联合索引中的字段在语句都被用到了，就不需要考虑最左匹配原则了，此时索引不会失效")]),_._v("）")]),_._v(" "),s("li",[s("a",{attrs:{href:"https://www.manongjc.com/detail/29-rnpuppiqpcxkbpn.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("mysql会一直向右匹配直到遇到范围查询(>、<、between、like)就停止匹配，本身字段也用到了索引，但后面的字段就失效"),s("OutboundLink")],1)])])])]),_._v(" "),s("p",[_._v("要尽可能扩展索引，而不是新建索引，因为索引数量过多需要维护的成本也会变大，导致写效率变低。同时还需要定期查询使用率低的索引，对于从未使用过的索引可以进行删除，这样才能让索引在 SQL 查询中发挥最大价值。")]),_._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[_._v("-- MySQL 中的 performance_schema.table_io_waits_summary_by_index_usage 数据表，")]),_._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[_._v("-- 它表明了每个索引进行统计的 I/O 等待事件，其中 COUNT_STAR 代表了事件的次数。")]),_._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[_._v("-- 过滤掉一些系统表，查看数据表中有哪些索引不经常使用的 SQL 语句如下：")]),_._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("SELECT")]),_._v(" OBJECT_SCHEMA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" OBJECT_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" INDEX_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" COUNT_STAR\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("FROM")]),_._v(" performance_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("table_io_waits_summary_by_index_usage\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("WHERE")]),_._v(" INDEX_NAME "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("IS")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("NOT")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[_._v("NULL")]),_._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("AND")]),_._v(" COUNT_STAR "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[_._v("0")]),_._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("AND")]),_._v(" OBJECT_SCHEMA "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("!=")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[_._v("'mysql'")]),_._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("AND")]),_._v(" OBJECT_SCHEMA "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("!=")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[_._v("'performance_schema'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[_._v("1")]),s("br"),s("span",{staticClass:"line-number"},[_._v("2")]),s("br"),s("span",{staticClass:"line-number"},[_._v("3")]),s("br"),s("span",{staticClass:"line-number"},[_._v("4")]),s("br"),s("span",{staticClass:"line-number"},[_._v("5")]),s("br"),s("span",{staticClass:"line-number"},[_._v("6")]),s("br"),s("span",{staticClass:"line-number"},[_._v("7")]),s("br"),s("span",{staticClass:"line-number"},[_._v("8")]),s("br"),s("span",{staticClass:"line-number"},[_._v("9")]),s("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);