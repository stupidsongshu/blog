(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{244:function(t,s,e){"use strict";e.r(s);var a=e(0),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[t._v("#")]),t._v(" Git")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://git-scm.com/doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://docs.github.com/cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("《Git权威指南》\n"),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/gotgit/gotgit",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.worldhello.net/gotgit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Website"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://rogerdudler.github.io/git-guide/index.zh.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("git - 简明指南"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://learngitbranching.js.org/?demo=&locale=zh_CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("learnGitBranching"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("ul",[e("li",[t._v("Worksapce: 工作区")]),t._v(" "),e("li",[t._v("Index/Stage: 暂存区")]),t._v(" "),e("li",[t._v("Repository: 本地仓库")]),t._v(" "),e("li",[t._v("Remote: 远程仓库")])]),t._v(" "),e("p",[t._v("HEAD: 始终指向当前所处分支的最新的提交点，实质上是一个指针，指向最新放入仓库的版本。")])]),t._v(" "),e("h2",{attrs:{id:"tig"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tig","aria-hidden":"true"}},[t._v("#")]),t._v(" Tig")]),t._v(" "),e("p",[t._v("text-mode interface for Git")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/jonas/tig",target:"_blank",rel:"noopener noreferrer"}},[t._v("tig"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://linux.cn/article-11069-1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何使用 Tig 浏览 Git 日志"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"git-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-2","aria-hidden":"true"}},[t._v("#")]),t._v(" .git")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("-rw-r--r--   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" squirrel  staff    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":59 COMMIT_EDITMSG\n-rw-r--r--   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" squirrel  staff   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":44 HEAD\n-rw-r--r--   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" squirrel  staff   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("41")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":49 ORIG_HEAD\n-rw-r--r--   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" squirrel  staff  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("137")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":19 config\n-rw-r--r--   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" squirrel  staff   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("73")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":19 description\ndrwxr-xr-x  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" squirrel  staff  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("480")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":19 hooks\n-rw-r--r--   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" squirrel  staff  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("554")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" 01:26 index\ndrwxr-xr-x   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" squirrel  staff   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("96")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":19 info\ndrwxr-xr-x   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" squirrel  staff  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":35 logs\ndrwxr-xr-x  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" squirrel  staff  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("800")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":59 objects\ndrwxr-xr-x   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" squirrel  staff  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":19 refs\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("h3",{attrs:{id:"config"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#config","aria-hidden":"true"}},[t._v("#")]),t._v(" config")]),t._v(" "),e("p",[t._v("config 的三个作用域")]),t._v(" "),e("ul",[e("li",[t._v("git config --local: local 只对当前仓库有效")]),t._v(" "),e("li",[t._v("git cinfig --global: global 对当前用户所有仓库有效")]),t._v(" "),e("li",[t._v("git config --system: system 对系统所有登录的用户有效")])]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有列表")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list --local\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list --global\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list --system\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看指定属性的值")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改指定属性的值")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'squirrel'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'squirrel@gmail.com'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("h3",{attrs:{id:"head"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#head","aria-hidden":"true"}},[t._v("#")]),t._v(" HEAD")]),t._v(" "),e("p",[t._v("指向 refs/heads")]),t._v(" "),e("h4",{attrs:{id:"detached-head"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#detached-head","aria-hidden":"true"}},[t._v("#")]),t._v(" detached HEAD")]),t._v(" "),e("p",[t._v("分离头指针：比如在执行 "),e("code",[t._v("git checkout <commitId>")]),t._v(" 时会出现分离头指针，这种情况下比较危险，因为此时提交的代码没有对应的分支，当切换到其他分支后，可能会被 git 清理导致丢失代码。")]),t._v(" "),e("p",[t._v("分离头指针应用场景：")]),t._v(" "),e("ol",[e("li",[t._v("如果临时想基于某个 commit 做变更，试试新方案是否可行，就可以采用分离头指针的方式。测试后发现新方案不成熟，直接 reset 回其他分支即可，省却了建、删分支的麻烦；如果觉得有用，那么可以新建一个分支，使用 "),e("code",[t._v("git branch <新分支名称> <在分离头指针上提交的 commitId>")])]),t._v(" "),e("li",[t._v("git rebase工作的过程中，就是用了分离头指针。rebase意味着基于新base的commit来变更部分commits。它处理的时候，把HEAD指向base的commit，此时如果该commit没有对应branch，就处于分离头指针的状态，然后重新一个一个生成新的commit，当rebase创建完最后一个commit后，结束分离头状态，Git让变完基的分支名指向HEAD。")])]),t._v(" "),e("h3",{attrs:{id:"refs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#refs","aria-hidden":"true"}},[t._v("#")]),t._v(" refs")]),t._v(" "),e("ul",[e("li",[t._v("heads")]),t._v(" "),e("li",[t._v("tags")])]),t._v(" "),e("h3",{attrs:{id:"objects"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#objects","aria-hidden":"true"}},[t._v("#")]),t._v(" objects")]),t._v(" "),e("p",[t._v("可以通过"),e("code",[t._v("git cat-file")]),t._v("查看对象")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/gotgit/gotgit/blob/master/02-git-solo/030-head-master-commit-refs.rst",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git对象"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 git 对象的类型，可能为 commit tree blob tag")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file -t c1b64e40e5cab82f5e20dd83b1aa8c00ab4606e7\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 git 对象的内容")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file -p c1b64e40e5cab82f5e20dd83b1aa8c00ab4606e7\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 git 对象的大小")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file -s c1b64e40e5cab82f5e20dd83b1aa8c00ab4606e7\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示暂存区所有文件对应的属性，包括blob的hash值")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ls-files --stage\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" .git/objects -type f\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("img",{attrs:{src:"/git/commit_tree_blob.png",alt:"commit_tree_blob"}})]),t._v(" "),e("h2",{attrs:{id:"命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),e("h3",{attrs:{id:"init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#init","aria-hidden":"true"}},[t._v("#")]),t._v(" init")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git init")]),t._v(": 在当前目录新建一个 git 代码库")]),t._v(" "),e("li",[e("code",[t._v("git init [<directory>]")]),t._v(": 将目录（不存在时先新建）初始化为一个 git 代码库")])]),t._v(" "),e("h3",{attrs:{id:"clone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone","aria-hidden":"true"}},[t._v("#")]),t._v(" clone")]),t._v(" "),e("p",[t._v("常用的传输协议")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("传输协议")]),t._v(" "),e("th",[t._v("语法格式")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("本地协议(1)")]),t._v(" "),e("td",[t._v("/path/to/repo.git")]),t._v(" "),e("td",[t._v("哑协议")])]),t._v(" "),e("tr",[e("td",[t._v("本地协议(2)")]),t._v(" "),e("td",[t._v("file:///path/to/repo.git")]),t._v(" "),e("td",[t._v("智能协议")])]),t._v(" "),e("tr",[e("td",[t._v("http/https 协议")]),t._v(" "),e("td",[t._v("http://git-server.com:port/path/to/repo.git"),e("br"),t._v("https://git-server.com:port/path/to/repo.git")]),t._v(" "),e("td",[t._v("平时接触到的都是智能协议（用户名密码）")])]),t._v(" "),e("tr",[e("td",[t._v("ssh 协议")]),t._v(" "),e("td",[t._v("user@git-server.com:path/to/repo.git")]),t._v(" "),e("td",[t._v("工作中最常用的智能协议（公私钥）")])])])]),t._v(" "),e("p",[t._v("哑协议与智能协议")]),t._v(" "),e("ul",[e("li",[t._v("直观区别：哑协议传输进度不可见；智能协议传输进度可见")]),t._v(" "),e("li",[t._v("传输速度：智能协议比哑协议传输速度快")])]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git clone --bare 创建裸仓库，不包含工作区，可作为远端备份")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http://www.worldhello.net/gotgit/02-git-solo/100-git-clone.html#id4")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --bare /Users/squirrel/practice/git-demo/.git ya.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把裸仓库变为普通仓库")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" ya\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" ya.git ya\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ya\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" ya.git .git\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config core.bare "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("h3",{attrs:{id:"remote"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remote","aria-hidden":"true"}},[t._v("#")]),t._v(" remote")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" git-remote\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" remote\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" remote --web\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote --help\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("ul",[e("li",[e("code",[t._v("git remote -v")]),t._v(": 显示远程仓库")]),t._v(" "),e("li",[t._v("git remote show [remote]: 显示指定远程仓库信息")]),t._v(" "),e("li",[e("code",[t._v("git remote add <origin name> <server URL>")]),t._v(": 将本地仓库连接到指定远程服务器")]),t._v(" "),e("li",[t._v("git remote add [shortname] [url]: 增加一个新的远程仓库，并命名")]),t._v(" "),e("li",[t._v("git remote update: 更新远程仓库")]),t._v(" "),e("li",[t._v("git pull [remote] [branch]: 拉取远程仓库的变化，并与本地分支合并")]),t._v(" "),e("li",[t._v("git push [remote] [branch]: 推送本地分支到远程仓库")]),t._v(" "),e("li",[t._v("git push [remote] --force: 强行推送当前分支到远程仓库")]),t._v(" "),e("li",[t._v("git push [remote] --all: 推送所有分支到远程仓库")])]),t._v(" "),e("h3",{attrs:{id:"add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add","aria-hidden":"true"}},[t._v("#")]),t._v(" add")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git add <file | directory>")]),t._v(": 添加工作区的指定目录或文件到暂存区")]),t._v(" "),e("li",[e("code",[t._v("git add *.html")]),t._v(": 添加工作区的指定类型文件（使用通配符方式批量提交）到暂存区")]),t._v(" "),e("li",[e("code",[t._v("git add -u")]),t._v(": 添加已经被add的文件且存在更改的文件（Git根路径以下所有文件）到暂存区（提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)）")]),t._v(" "),e("li",[e("code",[t._v("git add .")]),t._v(": 添加工作区当前目录下的所有存在更改文件到暂存区（包括提交新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件）")]),t._v(" "),e("li",[e("code",[t._v("git add --all")]),t._v(": (简写为"),e("code",[t._v("git add -A")]),t._v(")添加所有变化（Git根路径以下所有文件）到暂存区（包括提交新文件(new)、被修改(modified)文件以及被删除(deleted)文件）")])]),t._v(" "),e("h3",{attrs:{id:"commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit","aria-hidden":"true"}},[t._v("#")]),t._v(" commit")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git commit -m <message>")]),t._v(": 提交暂存区到仓库区")]),t._v(" "),e("li",[e("code",[t._v("git commit [file1 [file2...]] -m <message>")]),t._v(": 提交暂存区的指定文件到仓库区")]),t._v(" "),e("li",[e("code",[t._v("git commit -a")]),t._v(": 提交工作区自上次commit之后的变化，直接到仓库区")]),t._v(" "),e("li",[e("code",[t._v("git commit -v")]),t._v(": 提交时显示所有的diff信息")]),t._v(" "),e("li",[e("code",[t._v("git commit --amend")]),t._v(": 修改最近一次的提交的 message\n"),e("ul",[e("li",[e("strong",[t._v("注意：用于未 push 之前")])]),t._v(" "),e("li",[t._v("已经 push 到远端的话，得用 push -f 了")])])]),t._v(" "),e("li",[e("code",[t._v("git commit --amend -m <message>")]),t._v(": 使用一次新的commit，替代上一次提交，如果代码没有任何变化，则用来改写上一次commit的提交信息")]),t._v(" "),e("li",[e("code",[t._v("git commit --amend [file1 [file2...]]")]),t._v(": 修改上一次commit，并包括指定文件的新变化")])]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",[e("strong",[t._v("commit 规范")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular 规范"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commit message 和 Change log 编写指南"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.quanzhan.co/archives/168",target:"_blank",rel:"noopener noreferrer"}},[t._v("你可能已经忽略的git commit规范"),e("OutboundLink")],1)])])]),t._v(" "),e("h3",{attrs:{id:"branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#branch","aria-hidden":"true"}},[t._v("#")]),t._v(" branch")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" git-branch\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" branch\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" branch --web\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --help\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("ul",[e("li",[e("code",[t._v("git branch [-v]")]),t._v(": 查看本地分支")]),t._v(" "),e("li",[e("code",[t._v("git branch -r")]),t._v(": 查看远程分支")]),t._v(" "),e("li",[e("code",[t._v("git branch -a")]),t._v(": 查看本地分支和远程分支")]),t._v(" "),e("li",[e("code",[t._v("git branch <new-branch>")]),t._v(": 【以当前分支为基础】新建分支，但依然停留在当前分支")]),t._v(" "),e("li",[e("code",[t._v("git branch <new-branch> <commit>")]),t._v(": 以指定的提交为基础，新建分支，但依然停留在当前分支")]),t._v(" "),e("li",[e("code",[t._v("git branch -d <branch>")]),t._v(": 删除本地分支")]),t._v(" "),e("li",[e("code",[t._v("git branch -D <branch>")]),t._v(": 强制删除本地分支\n"),e("ul",[e("li",[e("a",{attrs:{href:"https://stackoverflow.com/questions/3640764/can-i-recover-a-branch-after-its-deletion-in-git",target:"_blank",rel:"noopener noreferrer"}},[t._v("恢复被删除的分支"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("code",[t._v("git branch -dr <remote-branch>")]),t._v(": 删除远程分支")]),t._v(" "),e("li",[e("code",[t._v("git branch --track <remote-branch> <branch>")]),t._v(": 新建分支，并与指定远程分支建立追踪关系")]),t._v(" "),e("li",[e("code",[t._v("git branch --set-upstream-to <remote-branch> <branch>")]),t._v(": 将现有的指定分支与远程分支建立追踪关系")]),t._v(" "),e("li",[e("code",[t._v("git checkout -")]),t._v(": 切换到上一分支")]),t._v(" "),e("li",[e("code",[t._v("git checkout <branch>")]),t._v(": 切换到指定分支，并更新工作区")]),t._v(" "),e("li",[e("code",[t._v("git checkout -b <new-branch>")]),t._v(": 【以当前分支为基础】新建分支（分支名为 new-branch），并切换到新建的分支")]),t._v(" "),e("li",[e("code",[t._v("git checkout -b <new-branch> <branch>")]),t._v(": 以指定的分支（分支名为 branch）为基础，新建分支，并切换到新建的分支")]),t._v(" "),e("li",[e("code",[t._v("git checkout -b <new-branch> <commit>")]),t._v(": 以指定的提交为基础，新建分支，并切换到新建的分支")]),t._v(" "),e("li",[e("code",[t._v("git merge <branch>")]),t._v(": 合并指定分支到当前分支")]),t._v(" "),e("li",[e("code",[t._v("git cherry-pick <commit>")]),t._v(": 选择一个commit，合并进当前分支")])]),t._v(" "),e("h3",{attrs:{id:"log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#log","aria-hidden":"true"}},[t._v("#")]),t._v(" log")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" git-log\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" log\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" log --web\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --help\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("ul",[e("li",[e("code",[t._v("git log")]),t._v(": 查看当前分支的提交历史")]),t._v(" "),e("li",[e("code",[t._v("git log <branch>")]),t._v(": 查看指定分支的提交历史")]),t._v(" "),e("li",[e("code",[t._v("git log --all")]),t._v(": 查看所有分支的提交历史")]),t._v(" "),e("li",[e("code",[t._v("git log -n4")]),t._v(": 查看最近4条")]),t._v(" "),e("li",[e("code",[t._v("git log -p")]),t._v(": 查看每个commit的具体改动")]),t._v(" "),e("li",[e("code",[t._v("git log --stat")]),t._v(": 查看每次更新的修改文件的统计信息")]),t._v(" "),e("li",[e("code",[t._v("git log --shortstat")]),t._v(": 只显示--stat中最后的行数添加修改删除统计")]),t._v(" "),e("li",[e("code",[t._v("git log --name-only")]),t._v(": 只在已修改的提交信息后显示文件清单")]),t._v(" "),e("li",[e("code",[t._v("git log --name-status")]),t._v(": 显示新增、修改和删除的文件清单")]),t._v(" "),e("li",[e("code",[t._v("git log --graph")]),t._v(": 使用ASCII艺术的树形结构来展示分支")]),t._v(" "),e("li",[e("code",[t._v("git log --abbrev-commit")]),t._v(": 仅显示SHA-1的前几个字符，而非所有的40个字符")]),t._v(" "),e("li",[e("code",[t._v("git log --oneline")]),t._v(": ("),e("code",[t._v("git log --pretty=oneline --abbrev-commit")]),t._v("的简写)每一条提交记录只占一行")]),t._v(" "),e("li",[e("code",[t._v("git log --pretty=[oneline, short, medium, full, fuller, reference, email, raw, format:<string>]")]),t._v(": 每一条提交记录只占一行\n"),e("ul",[e("li",[e("a",{attrs:{href:"https://git-scm.com/docs/git-log#_pretty_formats",target:"_blank",rel:"noopener noreferrer"}},[t._v("PRETTY FORMATS"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("code",[t._v("git log --date=<default, iso8601, local, relative, short, format:, iso8601-strict, raw, rfc2822, unix>")]),t._v(": 修改时间格式")]),t._v(" "),e("li",[e("code",[t._v("git log --relative-date")]),t._v(": (与"),e("code",[t._v("git log --date=relative")]),t._v("同义)使用相对时间显示")]),t._v(" "),e("li",[e("code",[t._v("git show")]),t._v(": 查看最新commit的改动")]),t._v(" "),e("li",[e("code",[t._v("git show <commit>")]),t._v(": 查看指定commit的改动")])]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --all --color --graph --pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format:"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("a",{attrs:{href:"https://stackoverflow.com/questions/6349139/can-i-get-git-to-tell-me-all-the-files-one-user-has-modified",target:"_blank",rel:"noopener noreferrer"}},[t._v("(stackoverflow) Can I get git to tell me all the files one user has modified?"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%H"')]),t._v(" --author"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yusong zhou"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" commit_hash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show --oneline --name-only "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$commit_hash")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tail")]),t._v(" -n+2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniq")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log develop --pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%H"')]),t._v(" --committer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yusong zhou"')]),t._v(" --after"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2021-12-01"')]),t._v(" --before"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2021-12-31"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" commit_hash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show --oneline --name-only "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$commit_hash")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tail")]),t._v(" -n+2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniq")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h3",{attrs:{id:"rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase","aria-hidden":"true"}},[t._v("#")]),t._v(" rebase")]),t._v(" "),e("ul",[e("li",[t._v("修改 commit message: "),e("code",[t._v("git rebase -i <parent_commit>")]),t._v(" "),e("code",[t._v("reword")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("注意：用于未 push 到公共分支之前（只要不影响到其他同事的分支，都可以自行整理，公共的分支坚决不行，不然会给他人带去及其不必要的痛苦）")])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://stackoverflow.com/questions/22992543/how-do-i-git-rebase-the-first-commit",target:"_blank",rel:"noopener noreferrer"}},[t._v("修改第一次提交的 message"),e("OutboundLink")],1),t._v(": "),e("code",[t._v("git rebase -i --root")])])])]),t._v(" "),e("li",[t._v("合并 commit: "),e("code",[t._v("git rebase -i <parent_commit>")]),t._v(" "),e("code",[t._v("squash")])])]),t._v(" "),e("h3",{attrs:{id:"diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diff","aria-hidden":"true"}},[t._v("#")]),t._v(" diff")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" git-diff\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --web\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --help\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("ul",[e("li",[e("code",[t._v("git diff [-- file1 [file2...]]")]),t._v(": 工作区和暂存区的差异")]),t._v(" "),e("li",[e("code",[t._v("git diff --cached [-- file1 [file2...]]")]),t._v(": 暂存区和 HEAD 的差异")]),t._v(" "),e("li",[e("code",[t._v("git diff --staged [-- file1 [file2...]]")]),t._v(": 暂存区和 HEAD 的差异")]),t._v(" "),e("li",[e("code",[t._v("git diff HEAD [-- file1 [file2...]]")]),t._v(": 工作区和 HEAD 的差异")]),t._v(" "),e("li",[e("code",[t._v("git diff <commit1> <commit2> [-- file1 [file2...]]")]),t._v(": commit1 和 commit2 这两次提交的差异")])]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD^ HEAD\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD^1 HEAD\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD^^ HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD~ HEAD\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD~1 HEAD\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD~2 HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("div",{staticClass:"tip custom-block"},[e("p",[t._v("PARENT 符号 ^ 和 ~")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[t._v("一个节点，可以包含多个子节点（checkout 出多个分支）")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("一个节点可以有多个父节点（多个分支合并）")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[t._v("^是~都是父节点，区别是跟随数字时候，^2 是第二个父节点，而~2是父节点的父节点")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[t._v("^和~可以组合使用,例如 HEAD~2^2")])])])]),t._v(" "),e("p",[t._v("参考：\n"),e("a",{attrs:{href:"https://blog.csdn.net/albertsh/article/details/106448035",target:"_blank",rel:"noopener noreferrer"}},[t._v("git在回退版本时HEAD~和HEAD^的作用和区别"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://stackoverflow.com/questions/2221658/whats-the-difference-between-head-and-head-in-git",target:"_blank",rel:"noopener noreferrer"}},[t._v("stackoverflow What's the difference between HEAD^ and HEAD~ in Git?"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stash","aria-hidden":"true"}},[t._v("#")]),t._v(" stash")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" git-stash\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" stash\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" stash --web\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash --help\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("ul",[e("li",[e("code",[t._v("git stash [push [-m|--message <message>]]")]),t._v(": 储藏")]),t._v(" "),e("li",[e("code",[t._v("git stash save [<message>]")]),t._v(": 储藏")]),t._v(" "),e("li",[e("code",[t._v("git stash list")]),t._v(": 查看现有的储藏")]),t._v(" "),e("li",[e("code",[t._v("git stash show -p [stash@{0}]")]),t._v(": 查看储藏内容")]),t._v(" "),e("li",[e("code",[t._v("git stash apply [stash@{0}]")]),t._v(": 应用储藏(不会删除该储藏内容)")]),t._v(" "),e("li",[e("code",[t._v("git stash drop [stash@{0}]")]),t._v(": 删除储藏内容")]),t._v(" "),e("li",[e("code",[t._v("git stash pop [stash@{0}]")]),t._v(": 应用储藏(会删除该储藏内容)")]),t._v(" "),e("li",[e("code",[t._v("git stash branch <branch>")]),t._v(": 从储藏中创建分支，检出你储藏工作时的所处的提交，重新应用你的工作，如果成功，将会丢弃储藏。")])]),t._v(" "),e("h3",{attrs:{id:"撤销"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销","aria-hidden":"true"}},[t._v("#")]),t._v(" 撤销")]),t._v(" "),e("h4",{attrs:{id:"checkout-恢复工作区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#checkout-恢复工作区","aria-hidden":"true"}},[t._v("#")]),t._v(" checkout 恢复工作区")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git checkout -- <file>")]),t._v(": 使用 HEAD 中的最新内容替换掉你的工作目录中的文件，已添加到暂存区的改动以及新文件都不会受到影响。\n"),e("ul",[e("li",[t._v("Git 2.23 之后，用 "),e("code",[t._v("git switch <new-branch>")]),t._v(" 替换切换分支的功能，"),e("code",[t._v("git restore <file>")]),t._v(" 替换对工作区文件进行恢复的功能。")])])]),t._v(" "),e("li",[e("code",[t._v("git checkout [commit] [file]")]),t._v(": 恢复暂存区的指定文件到工作区")])]),t._v(" "),e("h4",{attrs:{id:"reset-恢复暂存区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-恢复暂存区","aria-hidden":"true"}},[t._v("#")]),t._v(" reset 恢复暂存区")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" git-reset\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" reset\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" reset --web\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --help\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("ul",[e("li",[e("code",[t._v("git reset HEAD [-- file [file...]]")]),t._v(": 让暂存区恢复成和 HEAD 一样")]),t._v(" "),e("li",[e("code",[t._v("git reset --hard [<commit>]")]),t._v(": 清空工作区和暂存区中的修改")]),t._v(" "),e("li",[e("code",[t._v("git reset --hard HEAD^")]),t._v(": 清空工作区和暂存区中的修改")])]),t._v(" "),e("div",{staticClass:"warning custom-block"},[e("p",[e("strong",[t._v("git reset --hard 注意事项")])]),t._v(" "),e("p",[t._v("当我们 "),e("code",[t._v("git reset --hard")]),t._v(" 操作进行了版本回退，现在又需要之前的修改信息，也就是说我们需要版本回退之前的文件信息，此时分为三种情况：")]),t._v(" "),e("ul",[e("li",[t._v("之前的修改没有进行 "),e("code",[t._v("git add")]),t._v("，"),e("strong",[t._v("目前无能为力不能恢复")])]),t._v(" "),e("li",[t._v("之前的修改进行了 "),e("code",[t._v("git add")]),t._v(" 但没有 "),e("code",[t._v("git commit")]),t._v("，这种情况还可以抢救。\n"),e("ul",[e("li",[t._v("第一步："),e("code",[t._v("git fsck --lost-found")])]),t._v(" "),e("li",[t._v("第二步："),e("code",[t._v("git show [blob] > 文件")])])])]),t._v(" "),e("li",[t._v("之前的修改进行了 "),e("code",[t._v("commit")]),t._v(" 提交，这种最简单，执行 "),e("code",[t._v("git reflog")]),t._v(" 拿到哈希值后再 "),e("code",[t._v("git reset")]),t._v(" 即可")])])]),t._v(" "),e("h3",{attrs:{id:"重命名文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重命名文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 重命名文件")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git mv <source file> <destination file>")])])]),t._v(" "),e("h3",{attrs:{id:"删除文件-目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除文件-目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 删除文件/目录")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git rm <file>")])]),t._v(" "),e("li",[e("code",[t._v("git rm -r <directory>")])])]),t._v(" "),e("h3",{attrs:{id:"gitignore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitignore","aria-hidden":"true"}},[t._v("#")]),t._v(" .gitignore")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("github/gitignore"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://stackoverflow.com/questions/4308610/how-to-ignore-certain-files-in-git",target:"_blank",rel:"noopener noreferrer"}},[t._v("忽略已提交的文件："),e("OutboundLink")],1),t._v(" "),e("ol",[e("li",[t._v("把想忽略的文件添加到 .gitignore")]),t._v(" "),e("li",[e("code",[t._v("git rm --cached <file>")])])])])]),t._v(" "),e("h3",{attrs:{id:"参考链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考链接","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.im/post/5af0438f5188251b8015967e",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.im/post/5af0438f5188251b8015967e"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/post/5ce4ddb351882532e9631951",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.im/post/5ce4ddb351882532e9631951"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://gitready.com/advanced/2009/01/17/restoring-lost-commits.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://gitready.com/advanced/2009/01/17/restoring-lost-commits.html"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://www.programblings.com/2008/06/07/the-illustrated-guide-to-recovering-lost-commits-with-git/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.programblings.com/2008/06/07/the-illustrated-guide-to-recovering-lost-commits-with-git/"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/521xueweihan/git-tips",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/521xueweihan/git-tips"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);